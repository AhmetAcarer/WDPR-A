@inject WDPR_A.ViewModels.ChatViewModel chatViewModel
@{
  List<Chat> chats = await chatViewModel.GetChatsAsync();

}


<div class="container">
  <div class="row">


    <div class="col-lg-3">

      <div class="d-flex flex-column align-items-stretch flex-shrink-0 text-white">

            <a href="#" class="d-flex align-items-center flex-shrink-0 p-3 link-white text-decoration-none border-bottom"  style="background-color: #3e424f;">
              <svg class="bi me-2" width="30" height="24">
                <use xlink:href="#bootstrap"></use>
              </svg>
              <span class="fs-5 fw-bold text-white">Chats</span>
            </a>

            <div class="list-group list-group-flush border overflow-auto"  style="max-height: 22em;">
              @if (chats != null)
              {
                @foreach (var chat in chats)
                {
                  <a href="javascript:void(0)" id="@Html.Raw(chat.RoomId)"
                class="sidebar_button list-group-item list-group-item-action py-3 lh-tight" 
                aria-current="true">
                    <div class="d-flex w-100 align-items-center justify-content-between">
                      @if (chat.IsPrivate)
                      {
                        @if(User.IsInRole("Orthopedagogue"))
                        {
                          <strong class="mb-1">@chat.Subject</strong>
                        }
                        else
                        {
                          <strong class="mb-1">@chat.Orthopedagogue.FirstName @chat.Orthopedagogue.LastName</strong>
                        }
                      }
                      else
                      {
                        <strong class="mb-2">@chat.Subject</strong>
                      }
                    </div>
                    <div class="mb-1 small">
                      @if (chat.Messages.Any())
                      {
                        <p style="display:inline-block; margin-right:50%">@(chat.Messages.LastOrDefault().Text)</p>
                        <div><small>@chat.Messages.LastOrDefault().When.Hour.ToString():@chat.Messages.LastOrDefault().When.Minute.ToString()</small></div>
                      }
                    </div>
                  </a>
                }
              }
            </div>
      </div>

      <div>

      </div>

    </div>

    <div class="col-lg-9 scrollarea" style="max-height: 22em;">

          <div id="messages"></div>

    </div>
    

  </div>
</div>

<script>


  let sidebar_buttons = document.getElementsByClassName("sidebar_button");
  for (let i = 0; i < sidebar_buttons.length; i++) {
    sidebar_buttons[i].addEventListener("click", function () {
      let current_button = sidebar_buttons[i]
      var chatRoomId = current_button.id;
      connection.invoke("JoinRoom", chatRoomId);
      var text = "@Url.Action("OnGetChatPartial", new { chatRoomId = "name"})";
      text = text.replace("name", chatRoomId);
      if (!current_button.classList.contains("active")) {
        $.post(text, function (data) {
          $('#messages').replaceWith(data);
        });
        var current_chatRoom = chatRoomId;
        Array.from(sidebar_buttons).forEach((el) => el.classList.remove('active'));
        current_button.classList.add("active");
      }
    })
  }
</script>